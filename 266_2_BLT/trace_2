#!/bin/bash

# VL:
# agency_id = 266
# route_type = 3	i.e. Buss


# routes.txt = route_id,agency_id,route_short_name,route_long_name,route_desc,route_type,route_url,route_color,route_text_color

#	$1 = route_id
#	$2 = agency_id
#	$3 = route_short_name
#	$4 = route_long_name
#	$5 = route_desc
#	$6 = route_type
#	$7 = route_url
#	$8 = route_color
#	$9 = route_text_color

# trips.txt = route_id,service_id,trip_id,trip_headsign,trip_short_name,direction_id,block_id,shape_id

# 	$1 = route_id
#	$2 = service_id
# 	$3 = trip_id
#	$4 = trip_headsign
#	$5 = trip_short_name
# 	$6 = direction_id
#	$7 = block_id
#	$8 = shape_id

# stop_times.txt = trip_id,arrival_time,departure_time,stop_id,stop_sequence,stop_headsign,pickup_type,drop_off_type,shape_dist_traveled

#	$1 = trip_id
#	$2 = arrival_time
#	$3 = departure_time
#	$4 = stop_id
#	$5 = stop_sequence
#	$6 = stop_headsign
#	$7 = pickup_type
#	$8 = drop_off_type
#	$9 = shape_dist_traveled

# calendar.txt = service_id,monday,tuesday,wednesday,thursday,friday,saturday,sunday,start_date,end_date

#	$1 	= service_id
#	$2 	= monday
# 	$3 	= tuesday
# 	$4 	= wednesday
#	$5 	= thursday
#	$6 	= friday
#	$7 	= saturday
#	$8 	= sunday
#	$9 	= start_date
#	$10 = end_date	

# linje6 : 	266_206_BLT,	266,	6,	,	,	3,	http://www.ResRobot.se,,
#			266_1_BLT,		266,	6,	,	,	3,	http://www.ResRobot.se,,

#use route_short_name 266_1_BLT

trackNumber="2"
compareString="266_"$trackNumber"_BLT"

# compareString=${compareString}
if [ $1 = "1" ]; then

	declare -a myArray	
	echo "for safety, removing files that will be used"
	rm 266_${trackNumber}_BLT_service_id
	rm 266_${trackNumber}_BLT_stop_times_truncated.txt
	echo "--------------------------------------------"
	
	cat ../trips.txt | awk -v trackNumber=${trackNumber} -v awkCompareString="$compareString" 'BEGIN {FS=",";} { if ( $1 == awkCompareString ) {print $0} }' > 266_${trackNumber}_BLT_trips	
	cat 266_${trackNumber}_BLT_trips | awk '
		BEGIN {FS=","} 
		{ uniqueValues[$2] = $2 } 
		END { for (i in uniqueValues) {print uniqueValues[i] } }'  >> 266_${trackNumber}_BLT_service_id
	mkdir parsed
	
	lastIndex=`wc -l 266_${trackNumber}_BLT_trips | awk '{print $1}'`	
	cat 266_${trackNumber}_BLT_trips | awk -F"," -v lastIndex=$lastIndex 'BEGIN {ORS="\n"}; {if (NR==1) {print $3}}; {if (NR==(lastIndex)) {print $3}}' >> firstAndLastTrip				
	i=0
	while IFS=$'\n' read -r line_data; do
    	myArray[i]="${line_data}"
    	((++i))
	done < firstAndLastTrip
	rm firstAndLastTrip

	cat "../stop_times.txt" | awk -F"," -v firstTrip=${myArray[0]} -v lastTrip=${myArray[1]} '{if ( ($1==firstTrip) || ($1==lastTrip) ) {print NR}}' >> lineIndexes
	i=0
	while IFS=$'\n' read -r line_data; do
    	myArray[i]="${line_data}"
    	lastindex=$i
    	((++i))    	
	done < lineIndexes
	rm lineIndexes

	cat "../stop_times.txt" | awk -F"," -v lowerIndex=${myArray[0]} -v upperIndex=${myArray[$lastindex]} '{if ((NR>lowerIndex) && (NR<upperIndex)) {print $0}}' >> 266_${trackNumber}_BLT_stop_times_truncated.txt
	echo "finished trimming ../stop_times.txt"	

fi

if [ $1 = "2" ]; then

	echo "removing whitespace from 266_"${trackNumber}"_BLT_trips_withoutblankspace"
	cat '266_'${trackNumber}'_BLT_trips' | awk 'BEGIN {FS=",";} { print $0 }' | tr -d '[:blank:]' >> '266_'${trackNumber}'_BLT_trips_withoutblankspace'
	mv '266_'${trackNumber}'_BLT_trips_withoutblankspace' '266_'${trackNumber}'_BLT_trips'
	echo "---------"

	echo "get route_ids for each service_id and move them to parsed folder"
	arrayServiceId=$"`cat 266_${trackNumber}_BLT_service_id`"	
	for item in $arrayServiceId; do
		rm "parsed/266_${trackNumber}_BLT_trips_${item}"
		touch "parsed/266_${trackNumber}_BLT_trips_${item}"
		cat 266_${trackNumber}_BLT_trips | awk -v trip_id=$item '
			BEGIN {FS=",";} 
			{ if ($2 == trip_id ) 
				{ print $0 }
			} ' >> "parsed/266_${trackNumber}_BLT_trips_${item}"
	done
	echo "---------"

	echo "collecting trips for each route_id and service_id, moving them to parse/266_${trackNumber}_BLT_trips_stops_service_id_#"
	for item in $arrayServiceId; do
		rm "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}"
		touch "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}"	

		routeId=(`cat parsed/266_${trackNumber}_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $1}'`)
		serviceId=(`cat parsed/266_${trackNumber}_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $2}'`)
		tripId=(`cat parsed/266_${trackNumber}_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $3}'`)
		full=(`cat parsed/266_${trackNumber}_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $0}'`)	
		
		for ((i=0; i<${#full[@]}; ++i)); do
			echo ${full[$i]} >> "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}"	
			route_id=${routeId[$i]}
			trip_id=${tripId[$i]}
			service_id=${serviceId[$i]}
			cat 266_${trackNumber}_BLT_stop_times_truncated.txt | awk -v trip_id=$trip_id -v service_id=$service_id -v route_id=$route_id 'BEGIN {FS=",";} { if ($1 == trip_id )  {print route_id "," service_id "," $0} }' >> "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}"
		done		
	done
	echo "---------"
fi

# OBS you may have to update the name of the stations for route ${trackNumber}
if [ $1 = "3" ]; then

	echo "clean folder from old data"
	rm dumpPy/266_${trackNumber}_BLT_service_id_matchtimes
	rm dumpPy/266_${trackNumber}_BLT_service_id_with_dates
	echo "---------"

	arrayServiceId=$"`cat 266_${trackNumber}_BLT_service_id`"
	for item in $arrayServiceId; do
		rm "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}_trunced"
		cat "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}" | awk -v item=$item 'BEGIN {FS=",";} 
		{ if ( ($2 == item) )
			{ if ( ($4 != "NorraGryta") && ($4 != "Hamregatan") && ($4 != "Björnögården") && ($4 != "Björnöbadet") && ($4 != "VästeråsCentralstation")) 
				{ print $1","$2","$3","$4","$5",6"$6","$7",,,,"}
					else 
				{ print " "}
			}	
		}' >> "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}_trunced"
	done
	
	for item in $arrayServiceId; do
		python makeTableEntry.py "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}_trunced" "${item}" "${trackNumber}" 		
	done

	arrayServiceId=$"`cat 266_${trackNumber}_BLT_service_id`"
	for item in $arrayServiceId; do
		echo $item >> dumpPy/266_${trackNumber}_BLT_service_id_matchtimes
		python findLastAndFirst.py "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}_trunced" "${item}"		
	done
	echo "get dates when service_id is used"
	
	for item in $arrayServiceId 
		do 
			cat ../calendar.txt | awk -v item=$item '
			BEGIN {FS=","; print item} 
			{ 
				if ( ($1 == item) ){
					print $0
				}
			} 
			' >> dumpPy/266_${trackNumber}_BLT_service_id_with_dates
			cat ../calendar_dates.txt | awk -v item=$item '
			BEGIN {FS=","} 
			{ 
				if ( ($1 == item) && ($3 -eq 1 ) ){
					print $2
				}
			} 
			' >> dumpPy/266_${trackNumber}_BLT_service_id_with_dates
		done		

	python mapServiceIDtoDate.py ${trackNumber}

fi

# Manually create 266_1_BLT_stationIDs
if [ $1 = "10" ]; then
	arrayStationsID=$"`cat realIDs`"
	rm 266_${trackNumber}_BLT_stationNames
	touch 266_${trackNumber}_BLT_stationNames
	for item in $arrayStationsID; do
		cat ../stops.txt | awk -v stationId=$item '
			BEGIN {FS=",";} 
			{ if ($1 == stationId ) 
				{ print $2 }
			} ' >> "266_${trackNumber}_BLT_stationNames"
	done
fi

if [ $1 = "push" ]; then
	arrayServiceId=$"`cat 266_${trackNumber}_BLT_service_id`"
	for item in $arrayServiceId; do
		python makeTableEntry.py "parsed/266_${trackNumber}_BLT_trips_stops_service_id_${item}_trunced" "${item}" "${trackNumber}" 		
	done
fi
