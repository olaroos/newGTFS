#!/bin/bash

# VL:
# agency_id = 266
# route_type = 3	i.e. Buss


# routes.txt = route_id,agency_id,route_short_name,route_long_name,route_desc,route_type,route_url,route_color,route_text_color

#	$1 = route_id
#	$2 = agency_id
#	$3 = route_short_name
#	$4 = route_long_name
#	$5 = route_desc
#	$6 = route_type
#	$7 = route_url
#	$8 = route_color
#	$9 = route_text_color

# trips.txt = route_id,service_id,trip_id,trip_headsign,trip_short_name,direction_id,block_id,shape_id

# 	$1 = route_id
#	$2 = service_id
# 	$3 = trip_id
#	$4 = trip_headsign
#	$5 = trip_short_name
# 	$6 = direction_id
#	$7 = block_id
#	$8 = shape_id

# stop_times.txt = trip_id,arrival_time,departure_time,stop_id,stop_sequence,stop_headsign,pickup_type,drop_off_type,shape_dist_traveled

#	$1 = trip_id
#	$2 = arrival_time
#	$3 = departure_time
#	$4 = stop_id
#	$5 = stop_sequence
#	$6 = stop_headsign
#	$7 = pickup_type
#	$8 = drop_off_type
#	$9 = shape_dist_traveled

# calendar.txt = service_id,monday,tuesday,wednesday,thursday,friday,saturday,sunday,start_date,end_date

#	$1 	= service_id
#	$2 	= monday
# 	$3 	= tuesday
# 	$4 	= wednesday
#	$5 	= thursday
#	$6 	= friday
#	$7 	= saturday
#	$8 	= sunday
#	$9 	= start_date
#	$10 = end_date	

# linje6 : 	266_206_BLT,	266,	6,	,	,	3,	http://www.ResRobot.se,,
#			266_2_BLT,		266,	6,	,	,	3,	http://www.ResRobot.se,,

#use route_short_name 266_2_BLT
if [ $1 = "1" ]; then
	cat ../trips.txt | awk 'BEGIN {FS=",";} { if ( $1 == "266_2_BLT" ) {print $0} }' > 266_2_BLT_trips
fi

# Extract unique service_id for track 5 
if [ $1 = "2" ]; then
	rm 266_2_BLT_service_id
	touch 266_2_BLT_service_id
	cat 266_2_BLT_trips | awk '
		BEGIN {FS=","} 
		{ uniqueValues[$2] = $2 } 
		END { for (i in uniqueValues) {print uniqueValues[i] } }'  >> 266_2_BLT_service_id
	mkdir parsed
fi

# Now manually cut down the stop_times.txt to fit 266_2_BLT_trips,
# from 266_2_BLT_trips --> 
# first: 	55602595 
# last: 	64338028
# I save it as 266_2_BLT_stop_times_truncated.txt

# check uniquenes
if [ $1 = "22" ]; then 
	rm checkFile
	touch checkFile
	arrayTrips=$"`cat 266_2_BLT_trips`"
	for item in $arrayTrips; do
		echo $item | awk 'BEGIN {FS=",";} {print $3}' >> checkFile
		subItem=(`echo $item | awk 'BEGIN {FS=",";} {print $3}'`)
		cat 266_2_BLT_trips | awk -v item=$subItem 'BEGIN {FS=",";} { if ( $3 == item) { print "found a match for this item"}}' >> checkFile
		# cat 266_2_BLT_trips | awk -v item=$subItem 'BEGIN {FS=",";} { print $3 item}' >> checkFile
	done	
fi

# checkFile for track 2 manually checked and passed 22/07/2014

if [ $1 = "3" ]; then
	arrayServiceId=$"`cat 266_2_BLT_service_id`"
	for item in $arrayServiceId; do
		rm "parsed/266_2_BLT_trips_${item}"
		touch "parsed/266_2_BLT_trips_${item}"
		cat 266_2_BLT_trips | awk -v trip_id=$item '
			BEGIN {FS=",";} 
			{ if ($2 == trip_id ) 
				{ print $0 }
			} ' >> "parsed/266_2_BLT_trips_${item}"
	done
fi

if [ $1 = "4" ]; then
	arrayServiceId=$"`cat 266_2_BLT_service_id`"

	for item in $arrayServiceId; do
		rm "parsed/266_2_BLT_trips_stops_service_id_${item}"
		touch "parsed/266_2_BLT_trips_stops_service_id_${item}"	

		routeId=(`cat parsed/266_2_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $1}'`)
		serviceId=(`cat parsed/266_2_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $2}'`)
		tripId=(`cat parsed/266_2_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $3}'`)
		full=(`cat parsed/266_2_BLT_trips_${item} | awk 'BEGIN {FS=",";} {print $0}'`)	
		
		for ((i=0; i<${#full[@]}; ++i)); do
			echo ${full[$i]} >> "parsed/266_2_BLT_trips_stops_service_id_${item}"	
			route_id=${routeId[$i]}
			trip_id=${tripId[$i]}
			service_id=${serviceId[$i]}
			cat 266_2_BLT_stop_times_truncated.txt | awk -v trip_id=$trip_id -v service_id=$service_id -v route_id=$route_id 'BEGIN {FS=",";} { if ($1 == trip_id )  {print route_id "," service_id "," $0} }' >> "parsed/266_2_BLT_trips_stops_service_id_${item}"
		done		
	done
fi
# !MANUAL WORK
# !You have to specify the station names manually
# !MANUAL WORK
# Remove unwanted names 
if [ $1 = "5" ]; then
	arrayServiceId=$"`cat 266_2_BLT_service_id`"
	for item in $arrayServiceId; do
		rm "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced"
		touch "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced"
		cat "parsed/266_2_BLT_trips_stops_service_id_${item}" | awk -v item=$item 'BEGIN {FS=",";} 
		{ if ( ($2 == item) )
			{ if ( ($4 != "NorraGryta") && ($4 != "Hamregatan") && ($4 != "VästeråsCentralstation") && ($4 != "Björnögården") && ($4 != "Björnöbadet")) 
				{ print $1","$2","$3","$4","$5",2"$6","$7",,,,"}
					else 
				{ print " "}
			}	
		}' >> "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced"
	done
fi

# !TODO
# Optional prepend station id with track number

# if [ $1 = "55" ]; then
# 	arrayServiceId=$"`cat 266_2_BLT_service_id`"
# 	for item in $arrayServiceId; do
# 		rm "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced"
# 		touch "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced"
# 		cat "parsed/266_2_BLT_trips_stops_service_id_${item}" | awk -v item=$item 'BEGIN {FS=",";} 
# 		{ if ( ($2 == item) )
# 			{ if ( ($4 != "Hällaköpcenter") && ($4 != "Returvägen") && ($4 != "Nordanbymotet")) 
# 				{ print $0 } 
# 					else 
# 				{ print " "}
# 			}	
# 		}' >> "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced"
# 	done
# fi


if [ $1 = "6" ]; then
	arrayServiceId=$"`cat 266_2_BLT_service_id`"
	for item in $arrayServiceId; do
		python makeTableEntry.py "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced" "${item}" "2"		
	done
fi

if [ $1 = "7" ]; then
	rm dumpPy/266_2_BLT_service_id_matchtimes
	touch dumpPy/266_2_BLT_service_id_matchtimes
	arrayServiceId=$"`cat 266_2_BLT_service_id`"
	for item in $arrayServiceId; do
		echo $item >> dumpPy/266_2_BLT_service_id_matchtimes
		python findLastAndFirst.py "parsed/266_2_BLT_trips_stops_service_id_${item}_trunced" "${item}"		
	done
fi

# get dates when service_id is used 
if [ $1 = "8" ]; then
	rm dumpPy/266_2_BLT_service_id_with_dates
	touch dumpPy/266_2_BLT_service_id_with_dates
	service_id=$"`cat 266_2_BLT_service_id`"
	for item in $service_id 
		do 
			cat ../calendar.txt | awk -v item=$item '
			BEGIN {FS=","; print item} 
			{ 
				if ( ($1 == item) ){
					print $0
				}
			} 
			' >> dumpPy/266_2_BLT_service_id_with_dates

			cat ../calendar_dates.txt | awk -v item=$item '
			BEGIN {FS=","} 
			{ 
				if ( ($1 == item) && ($3 -eq 1 ) ){
					print $2
				}
			} 
			' >> dumpPy/266_2_BLT_service_id_with_dates
		done		
fi

# Manually create 266_2_BLT_stationIDs
if [ $1 = "9" ]; then
	arrayStationsID=$"`cat realIDs`"
	rm 266_2_BLT_stationNames
	touch 266_2_BLT_stationNames
	for item in $arrayStationsID; do
		cat ../stops.txt | awk -v stationId=$item '
			BEGIN {FS=",";} 
			{ if ($1 == stationId ) 
				{ print $2 }
			} ' >> "266_2_BLT_stationNames"
	done
fi
# get names of stations
































